name: CD
run-name: ${{ github.actor }} is running the CD ‚öôÔ∏è
on:
  # Runs this everytime a PR is merged against main
  push:
    branches:
      - main

jobs:
    build-lint-test-deploy:
        runs-on: ubuntu-latest
        steps:
          # Fetches the GitHub repository files
          - name: Check out repository code 
            uses: actions/checkout@v4
          
          # Authenticates in GCP with the provided user credentials.
          # Provides secure, temporary credentials for GCP.
          # Supports authentication using Service Account Key JSONs (less secure, legacy method).
          - name: Authenticate with GCP 
            uses: google-github-actions/auth@v1Go
            with:
              credentials_json: ${{ secrets.GCP_SA_KEY }}

          # Set the default GCP project for subsequent gcloud commands in your environment. 
          - name: Configure GCP Project
            run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

          
          
          - name: This will be your CD ‚öôÔ∏è
            run: echo "This will be your CD ‚öôÔ∏è"
          
          - name: Get dependencies
            run: flutter pub get

          - name: Compiles flutter project
            run: flutter build web
          
          - name: Formats dart files
            run: dart format --output=none --set-exit-if-changed .

          - name: Error checks
            run: flutter analyze

          - name: Runs tests (yaml branch)
            run: flutter test

          # Configure Docker authentication for interacting with Artifact Registry, allowing you to push or pull Docker images securely.
          # Build the docker image and push top artifact registry.
          - name: Build and Push Docker Image üê≥
            run: |
              gcloud auth configure-docker --quiet
              gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet
              docker build -t europe-west3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY }}/game132:cicd-3v1 .
              docker push europe-west3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY }}/game132:cicd-3v1
          
          - name: step 4
            run: gcloud run deploy cicd-3 \
                --image europe-west3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY }}/game132:cicd-3v1 \
                --region us-central

          
